import{d as V,e as _,g as k,h as g}from"./VTextField-BRPrvh20.js";import{W as f,am as p,an as P,c as R,o as b,f as C,l as $,b as x,m as c,ao as w,h as A,e as S,y as T,ap as v,aq as h,v as B,a6 as I,a7 as z,r as D,a8 as L,aa as N}from"./index-Bck-Ahgw.js";import{f as j}from"./forwardRefs-DWGaNmQL.js";const G=Object.assign({name:"AppTextField",inheritAttrs:!1},{__name:"AppTextField",setup(s){const i=f(()=>{const e=p().id,o=P();return e?`app-text-field-${e}`:o}),r=f(()=>p().label);return(t,e)=>(b(),R("div",{class:B(["app-text-field flex-grow-1",t.$attrs.class])},[c(r)?(b(),C(V,{key:0,for:c(i),class:"mb-1 text-body-2 text-wrap",style:{"line-height":"15px"},text:c(r)},null,8,["for","text"])):$("",!0),x(_,v(h({...t.$attrs,class:null,label:void 0,variant:"outlined",id:c(i)})),w({_:2},[A(t.$slots,(o,m)=>({name:m,fn:S(d=>[T(t.$slots,m,v(h(d||{})))])}))]),1040)],2))}}),q=z({...N(),...g()},"VForm"),H=I()({name:"VForm",props:q(),emits:{"update:modelValue":s=>!0,submit:s=>!0},setup(s,i){let{slots:r,emit:t}=i;const e=k(s),o=D();function m(n){n.preventDefault(),e.reset()}function d(n){const l=n,a=e.validate();l.then=a.then.bind(a),l.catch=a.catch.bind(a),l.finally=a.finally.bind(a),t("submit",l),l.defaultPrevented||a.then(y=>{var u;let{valid:F}=y;F&&((u=o.value)==null||u.submit())}),l.preventDefault()}return L(()=>{var n;return x("form",{ref:o,class:["v-form",s.class],style:s.style,novalidate:!0,onReset:m,onSubmit:d},[(n=r.default)==null?void 0:n.call(r,e)])}),j(e,o)}});export{H as V,G as _};
